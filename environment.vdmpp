class Environment is subclass of GLOBAL

types
    private inline = Time * Car;
    private outline = set of (Position * Car) * set of StreetLamp * Time;

instance variables
    private io : IO := new IO();

    private inlines : seq of inline := [];
    private outlines : seq of outline := [];

    private city : City;
    
    private busy : bool := true;

operations
    -- debug: [io]
    --        Seems that `success` is false,
    --        I don't know where to start debugging
    public Environment : String * String ==> Environment
    Environment(p_inline_fname, p_city_fname) == (
        def mk_(success, input) = io.freadval[seq of inline](p_inline_fname) in
            if success then
                inlines := input
            else
                io.echo("Error reading inlines file\n");
        
        def mk_(success, input) = io.freadval[City](p_city_fname) in
            if success then
                city := input
            else
                io.echo("Error reading city file\n");
    );

    -- output the outlines
    public show_result : () ==> ()
    show_result() ==
        def - = io.writeval[seq of outline](outlines) in skip;
    
    -- Function to run through the inlines and generate the outlines
    public run : () ==> ()
    run() == (
        while not is_finished() do (
            handle_inlines();
            city.step();
            World`timerRef.step_time();
        );
    );

    -- Function to handle all inlines for the current time
    private handle_inlines : () ==> ()
    handle_inlines() == (
        if len inlines > 0 then (
            dcl current_time : Time := World`timerRef.get_time(),
                done : bool := false;
            while not done do (
                def mk_(time, car) = hd inlines in
                    if time <= current_time then (
                        city.add_car(car);
                        inlines := tl inlines;
                        done := len inlines = 0;
                    )
                    else done := true;
            )
        )
        else busy := false;
    );

    -- I think maybe we should keep simulating until all cars have exited the city
    public is_finished : () ==> bool 
    is_finished() == 
        return inlines = [];

end Environment